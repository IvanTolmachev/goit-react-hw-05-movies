{"version":3,"file":"static/js/115.aec0880d.chunk.js","mappings":"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","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","service/themoviedbApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Img = styled.img`\n  width: 100%;\n  border-radius: 20px;\n  margin-top: 10px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 15px;\n  width: 200px;\n  background-color: #20b2aa;\n  border-radius: 20px;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const Title = styled.h3`\n  padding: 10px;\n  font-size: 40px;\n  text-align: center;\n  color: black;\n`;\n\nexport const Text = styled.p`\n  color: black;\n  font-size: 40px;\n  font-weight: 600;\n  text-align: center;\n  margin: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiService } from 'service/themoviedbApi';\nimport { Img, List, Item, Title, Text } from './Cast.styled';\n\nexport function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    apiService.getMovieActors(movieID).then(response => {\n      const actors = response.cast.map(actor => {\n        return {\n          name: actor.name,\n          character: actor.character,\n          id: actor.credit_id,\n          photo: actor.profile_path,\n        };\n      });\n      setCast(actors);\n    });\n  }, [movieID]);\n\n  return (\n    <>\n      <Title className=\"isHidden\">Actors</Title>\n      {cast.length === 0 ? (\n        <Text>There is no information about actors</Text>\n      ) : (\n        <List>\n          {cast.map(actor => {\n            return (\n              <Item key={actor.id}>\n                <div>\n                  <h4>{actor.name}</h4>\n                  <p>Character: {actor.character}</p>\n                </div>\n                <Img\n                  src={\n                    actor.photo\n                      ? `https://www.themoviedb.org/t/p/original/${actor.photo}`\n                      : 'https://i.ibb.co/dPBdjhT/actor-plug.png'\n                  }\n                  alt={actor.name}\n                ></Img>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","class ApiService {\n  apiKey = '3310740c123ce509202cf05650ab41d5';\n  baseUrl = 'https://api.themoviedb.org/3';\n  mostPopularUrl = '/trending/movie/day';\n  byKeyWordUrl = '/search/company';\n  wholeMovieInformationUrl = '/movie/';\n  actorsUrl = '/movies/';\n  viewsUrl = '/movie/';\n\n  async getMostPopularMovies() {\n    let movies = [];\n    try {\n      await fetch(\n        `${this.baseUrl}${this.mostPopularUrl}?api_key=${this.apiKey}`\n      )\n        .then(response => response.json())\n        .then(data => {\n          movies = data.results;\n        });\n    } catch (error) {\n      console.log(`fetch error: ${error}`);\n    }\n    return movies;\n  }\n\n  async getMoviesByKeyWord(keyWord) {\n    let moviesByKeyWord = null;\n    try {\n      await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${keyWord}`\n      )\n        .then(response => response.json())\n        .then(data => (moviesByKeyWord = data));\n    } catch (error) {\n      console.log(`fetch error: ${error}`);\n    }\n    console.log(moviesByKeyWord);\n    return moviesByKeyWord;\n  }\n\n  async getWholeMovieInformation(id) {\n    let movieInfo = null;\n    try {\n      await fetch(\n        `${this.baseUrl}${this.wholeMovieInformationUrl}${id}?api_key=${this.apiKey}`\n      )\n        .then(response => response.json())\n        .then(data => (movieInfo = data));\n    } catch (error) {\n      console.log(error);\n    }\n    return movieInfo;\n  }\n\n  async getMovieCast(id) {\n    let movieCast = null;\n    try {\n      await fetch(\n        `${this.baseUrl}${this.wholeMovieInformationUrl}${id}?api_key=${this.apiKey}`\n      )\n        .then(response => response.json())\n        .then(data => (movieCast = data));\n    } catch (error) {\n      console.log(error);\n    }\n    return movieCast;\n  }\n\n  async getMovieReviews(id) {\n    let movieReviews = null;\n    try {\n      await fetch(`${this.baseUrl}/movie/${id}/reviews?api_key=${this.apiKey}`)\n        .then(response => response.json())\n        .then(data => (movieReviews = data));\n    } catch (error) {\n      console.log(error);\n    }\n    return movieReviews;\n  }\n\n  async getMovieActors(id) {\n    let cast = null;\n    try {\n      await fetch(`${this.baseUrl}/movie/${id}/credits?api_key=${this.apiKey}`)\n        .then(response => response.json())\n        .then(data => (cast = data));\n    } catch (error) {\n      console.log(error);\n    }\n    return cast;\n  }\n}\n\nexport const apiService = new ApiService();\n"],"names":["Img","styled","List","Item","Title","Text","Cast","useState","cast","setCast","movieID","useParams","useEffect","apiService","then","response","actors","map","actor","name","character","id","credit_id","photo","profile_path","className","length","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ApiService","apiKey","baseUrl","mostPopularUrl","byKeyWordUrl","wholeMovieInformationUrl","actorsUrl","viewsUrl","movies","fetch","json","data","results","console","log","keyWord","moviesByKeyWord","movieInfo","movieCast","movieReviews"],"sourceRoot":""}